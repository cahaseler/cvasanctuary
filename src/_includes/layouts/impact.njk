---
layout: layouts/base.njk
---

<style>
  .impact-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    background: transparent !important;
  }

  .impact-title {
    text-align: center;
    font-size: 2.5rem;
    color: var(--color-primary);
    margin-bottom: 1.5rem;
    line-height: 1.2;
  }

  .impact-section {
    margin-bottom: 1rem;
    background: transparent !important;
  }

  .impact-section h2 {
    color: var(--color-primary);
    font-size: 1.8rem;
    margin-top: 0;
    margin-bottom: 1.5rem;
  }

  .impact-section h3 {
    color: var(--color-primary);
    font-size: 1.4rem;
    margin: 2rem 0 1rem;
  }

  .impact-section p {
    line-height: 1.8;
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
  }

  /* Adoptions section two-column layout */
  .adoptions-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    align-items: start;
  }
  
  @media (min-width: 768px) {
    .adoptions-grid {
      grid-template-columns: 1fr 1fr;
    }
  }
  
  .adoptions-left img {
    width: 100%;
    height: auto;
    margin-bottom: 1.5rem;
  }
  
  .adoptions-right img {
    width: 100%;
    height: auto;
    margin-bottom: 1.5rem;
    border-radius: 8px;
  }

  /* History images */
  .history-images {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin: 2rem 0;
  }
  
  @media (min-width: 768px) {
    .history-images {
      grid-template-columns: 1fr 1fr;
    }
    
    .history-images figure:first-child {
      grid-column: 1 / -1;
    }
  }

  .history-images figure {
    margin: 0;
    text-align: center;
  }

  .history-images img {
    width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
    border-radius: 4px;
  }

  .history-images figcaption {
    margin-top: 0.5rem;
    font-size: 0.9rem;
    color: #666;
    font-style: italic;
  }

  /* Chart sections */
  .charts-container {
    margin: 2rem 0;
    max-width: 900px;
    margin-left: auto;
    margin-right: auto;
  }

  .chart-full {
    width: 100%;
    margin-bottom: 2rem;
  }

  .chart-full img {
    width: 100%;
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
  }

  .charts-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin: 2rem 0;
  }

  .chart-half img {
    width: 100%;
    height: auto;
    display: block;
  }

  /* Fire Kittens section with warning */
  .warning-box {
    background: #fff3cd;
    border: 2px solid #ffc107;
    border-radius: 8px;
    padding: 1rem;
    margin: 2rem auto;
    max-width: 600px;
    text-align: center;
    font-style: italic;
  }

  /* Fire Kittens carousel - Modern CSS approach */
  .kitten-carousel {
    margin: 2rem auto;
    max-width: 800px;
  }
  
  .kitten-carousel .carousel-viewport {
    overflow: hidden;
    border-radius: 8px;
    background: #f5f5f5;
  }

  .kitten-carousel .carousel-container {
    display: flex;
    transition: transform 0.5s ease;
  }

  .kitten-carousel .carousel-slide {
    flex: 0 0 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f5f5f5;
  }

  .kitten-carousel img {
    max-width: 100%;
    max-height: 500px;
    height: auto;
    width: auto;
    display: block;
  }
  
  .kitten-carousel .carousel-nav {
    margin-top: 1rem;
  }
  
  .kitten-carousel .carousel-controls {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 0.5rem;
  }
  
  .kitten-carousel .carousel-dots {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
  }
  
  .kitten-carousel .dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #ccc;
    cursor: pointer;
    transition: background 0.3s;
    border: none;
    padding: 0;
  }

  .kitten-carousel .dot.active {
    background: var(--color-primary);
  }
  
  .kitten-carousel .carousel-btn {
    background: var(--color-primary);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    transition: background 0.3s;
  }

  .kitten-carousel .carousel-btn:hover {
    background: var(--color-primary-dark);
  }

  /* Volunteers section layout */
  .volunteers-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-bottom: 2rem;
  }
  
  @media (min-width: 768px) {
    .volunteers-content {
      grid-template-columns: 2fr 1fr;
      align-items: start;
    }
  }
  
  .volunteers-image img {
    width: 100%;
    height: auto;
    border-radius: 8px;
  }
  
  .volunteer-charts {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-top: 2rem;
  }
  
  @media (min-width: 768px) {
    .volunteer-charts {
      grid-template-columns: 1fr 1fr;
    }
  }
  
  .volunteer-charts img {
    width: 100%;
    height: auto;
  }

  /* Volunteer carousel */
  .volunteer-carousel {
    position: relative;
    margin: 2rem auto;
    max-width: 800px;
    overflow: hidden;
  }

  .carousel-container {
    display: flex;
    transition: transform 0.5s ease;
  }

  .carousel-slide {
    min-width: 100%;
    flex-shrink: 0;
  }

  .carousel-slide img {
    width: 100%;
    height: auto;
    display: block;
  }

  .carousel-controls {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 1rem;
  }

  .carousel-btn {
    background: var(--color-primary);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    transition: background 0.3s;
  }

  .carousel-btn:hover {
    background: var(--color-primary-dark);
  }

  .carousel-dots {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #ccc;
    cursor: pointer;
    transition: background 0.3s;
  }

  .dot.active {
    background: var(--color-primary);
  }

  /* Programs section charts */
  .program-charts {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin-top: 2rem;
  }
  
  @media (min-width: 768px) {
    .program-charts {
      grid-template-columns: 1fr 1fr;
    }
  }
  
  .program-charts img {
    width: 100%;
    height: auto;
  }

  /* Programs list - remove background */
  .programs-list {
    list-style: none;
    padding: 0;
    margin: 2rem 0;
  }

  .programs-list li {
    padding: 1rem 0;
    margin-bottom: 0.5rem;
    border-left: 4px solid var(--color-primary);
    padding-left: 1rem;
  }

  .programs-list h4 {
    color: var(--color-primary);
    margin-bottom: 0.5rem;
  }

  /* Statistics section */
  .stats-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin: 2rem auto;
    max-width: 600px;
  }

  .stats-grid img {
    width: 100%;
    height: auto;
  }
  
  .stats-charts {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin: 2rem auto;
    max-width: 600px;
  }
  
  .stats-charts img {
    width: 100%;
    height: auto;
  }

  /* Call to action */
  .cta-section {
    background: var(--color-primary);
    color: white;
    padding: 3rem 2rem;
    border-radius: 8px;
    text-align: center;
    margin-top: 3rem;
  }

  .cta-section h2 {
    color: white;
    margin-bottom: 2rem;
  }

  .cta-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 2rem;
    max-width: 800px;
    margin: 0 auto;
  }

  .cta-item {
    text-align: center;
  }

  .cta-item a {
    color: white;
    text-decoration: none;
    font-size: 1.2rem;
    font-weight: bold;
    display: block;
    padding: 1rem;
    background: rgba(255,255,255,0.1);
    border-radius: 8px;
    transition: background 0.3s;
  }

  .cta-item a:hover {
    background: rgba(255,255,255,0.2);
  }

  /* Moving Forward section with two columns */
  .moving-forward-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    align-items: start;
  }
  
  @media (min-width: 768px) {
    .moving-forward-content {
      grid-template-columns: 1fr 1fr;
    }
  }
  
  .moving-forward-section img {
    width: 100%;
    height: auto;
    border-radius: 8px;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .impact-title {
      font-size: 2rem;
    }

    .charts-row,
    .kitten-images,
    .stats-grid {
      grid-template-columns: 1fr;
    }

    .cta-grid {
      grid-template-columns: 1fr 1fr;
    }
  }
</style>

<div class="impact-page">
  <h1 class="impact-title">{{ title }}</h1>

  {{ content | safe }}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Handle all carousels on the page
  function initCarousel(carouselElement) {
    const container = carouselElement.querySelector('.carousel-container');
    const slides = carouselElement.querySelectorAll('.carousel-slide');
    const dots = carouselElement.querySelectorAll('.dot');
    const prevBtn = carouselElement.querySelector('.carousel-prev');
    const nextBtn = carouselElement.querySelector('.carousel-next');
    let currentSlide = 0;

    function showSlide(index) {
      if (container && slides.length > 0) {
        currentSlide = (index + slides.length) % slides.length;
        container.style.transform = `translateX(-${currentSlide * 100}%)`;
        
        // Update dots
        dots.forEach((dot, i) => {
          dot.classList.toggle('active', i === currentSlide);
        });
      }
    }

    // Auto-advance carousel
    if (slides.length > 0) {
      setInterval(() => {
        showSlide(currentSlide + 1);
      }, 5000);
    }

    // Dot click handlers
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => showSlide(index));
    });

    // Button handlers
    if (prevBtn) {
      prevBtn.addEventListener('click', () => showSlide(currentSlide - 1));
    }
    
    if (nextBtn) {
      nextBtn.addEventListener('click', () => showSlide(currentSlide + 1));
    }
  }

  // Initialize kitten carousel specifically
  const kittenCarousel = document.querySelector('.kitten-carousel');
  if (kittenCarousel) {
    const container = kittenCarousel.querySelector('.carousel-container');
    const slides = kittenCarousel.querySelectorAll('.carousel-slide');
    const dots = kittenCarousel.querySelectorAll('.dot');
    const prevBtn = kittenCarousel.querySelector('.carousel-prev');
    const nextBtn = kittenCarousel.querySelector('.carousel-next');
    let currentSlide = 0;

    function showSlide(index) {
      if (container && slides.length > 0) {
        currentSlide = (index + slides.length) % slides.length;
        container.style.transform = `translateX(-${currentSlide * 100}%)`;
        
        // Update dots
        dots.forEach((dot, i) => {
          dot.classList.toggle('active', i === currentSlide);
        });
      }
    }

    // Dot click handlers
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => showSlide(index));
    });

    // Button handlers
    if (prevBtn) {
      prevBtn.addEventListener('click', () => showSlide(currentSlide - 1));
    }
    
    if (nextBtn) {
      nextBtn.addEventListener('click', () => showSlide(currentSlide + 1));
    }

    // Auto-advance
    setInterval(() => {
      showSlide(currentSlide + 1);
    }, 5000);
  }
  
  // Initialize other carousels if any
  document.querySelectorAll('.volunteer-carousel').forEach(carousel => {
    initCarousel(carousel);
  });
});
</script>